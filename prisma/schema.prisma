// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  imageUrl  String?
  firstName String
  lastName  String

  emailAddress String @unique

  credits Int    @default(350)
  role    String @default("étudiant")

  dashboardConfig     DashboardConfig?
  alerts              Alert[]
  etageConfigurations EtageConfiguration[]
  batimentConfig      BatimentConfig?
}

model DashboardConfig {
  id     String @id @default(cuid())
  userId String @unique
  config Json

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Devices {
  id          String  @id @default(cuid())
  device_key  String  @unique
  name        String
  unit        String
  device_id   String?
  device_name String?
  address_ip  String

  devices_values Devices_values[] @relation("DeviceValues")
}

model Devices_values {
  id         String   @id @default(cuid())
  device_key String
  value      String
  unit       String
  quality    String
  timestamp  DateTime @default(now())

  device Devices @relation("DeviceValues", fields: [device_key], references: [device_key])

  @@index([device_key])
}

model Alert {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  threshold     Float
  building      String
  floor         String?
  measureId     String?
  measureName   String?
  isActive      Boolean   @default(true)
  lastTriggered DateTime?

  @@index([userId])
}

model EtageConfiguration {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  selectedMeasures Json // Stocke les mesures sélectionnées
  name             String? // Nom optionnel de la configuration
  isDefault        Boolean @default(false)

  @@index([userId])
}

model BatimentConfig {
  id     String @id @default(cuid())
  userId String @unique
  config Json

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}
